{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"28/06/19","version":"0.3.2","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"WrHPKVUHMQ-o","colab_type":"code","outputId":"10e3746a-ecd4-4ef8-e7fe-5a9a8beb7f79","executionInfo":{"status":"error","timestamp":1561703486876,"user_tz":-330,"elapsed":830,"user":{"displayName":"parth mistry","photoUrl":"https://lh3.googleusercontent.com/-XnE4WLc2Cq4/AAAAAAAAAAI/AAAAAAAANDE/xiLXoOhcX3c/s64/photo.jpg","userId":"01481429770024434483"}},"colab":{"base_uri":"https://localhost:8080/","height":129}},"source":["class Demo:\n","  def test():\n","    print(\"test() for the class and method\")\n","  return  "],"execution_count":6,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-6-59d5db414e87>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    return\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m 'return' outside function\n"]}]},{"cell_type":"code","metadata":{"id":"PfHoovj6OycI","colab_type":"code","outputId":"d5f3a2a1-610f-4943-e37c-6eac4b9e9742","executionInfo":{"status":"ok","timestamp":1561703505253,"user_tz":-330,"elapsed":1102,"user":{"displayName":"parth mistry","photoUrl":"https://lh3.googleusercontent.com/-XnE4WLc2Cq4/AAAAAAAAAAI/AAAAAAAANDE/xiLXoOhcX3c/s64/photo.jpg","userId":"01481429770024434483"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["class Person: \n","  \n","    # init method or constructor  \n","    def __init__(self, name): \n","        self.name = name \n","  \n","    # Sample Method  \n","    def say_hi(self): \n","        print('Hello, my name is', self.name) \n","  \n","p = Person('Parth Mistry') \n","p.say_hi() "],"execution_count":7,"outputs":[{"output_type":"stream","text":["Hello, my name is Parth Mistry\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"QINWxVa6PBaV","colab_type":"code","outputId":"4365a4f9-1496-4bf7-c01d-6d8f53040a66","executionInfo":{"status":"ok","timestamp":1561703515656,"user_tz":-330,"elapsed":752,"user":{"displayName":"parth mistry","photoUrl":"https://lh3.googleusercontent.com/-XnE4WLc2Cq4/AAAAAAAAAAI/AAAAAAAANDE/xiLXoOhcX3c/s64/photo.jpg","userId":"01481429770024434483"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["class CSStudent: \n","  \n","    # Class Variable \n","    stream = 'cse'             \n","  \n","    # The init method or constructor \n","    def __init__(self, roll): \n","    \n","        # Instance Variable     \n","        self.roll = roll        \n","   \n","# Objects of CSStudent class \n","a = CSStudent(101) \n","b = CSStudent(102) \n","   \n","print(a.stream)  # prints \"cse\" \n","print(b.stream)  # prints \"cse\" \n","print(a.roll)    # prints \"cse\"\n","   \n","# Class variables can be accessed using class \n","# name also \n","print(CSStudent.stream) # prints \"cse\"  "],"execution_count":8,"outputs":[{"output_type":"stream","text":["cse\n","cse\n","101\n","cse\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mauiVSAjPOdh","colab_type":"code","colab":{}},"source":["class Demo1:\n","  def fact(self,n):\n","    #return the 0"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"LBpipqwiRvU5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"e6b932c9-55fc-47d2-f474-8c933f19633c","executionInfo":{"status":"ok","timestamp":1561711808708,"user_tz":-330,"elapsed":773,"user":{"displayName":"parth mistry","photoUrl":"https://lh3.googleusercontent.com/-XnE4WLc2Cq4/AAAAAAAAAAI/AAAAAAAANDE/xiLXoOhcX3c/s64/photo.jpg","userId":"01481429770024434483"}}},"source":["class CSStudent: \n","      \n","    # Class Variable \n","    stream = 'cse'      \n","      \n","    # The init method or constructor \n","    def __init__(self, roll): \n","          \n","        # Instance Variable \n","        self.roll = roll             \n","  \n","    # Adds an instance variable  \n","    def setAddress(self, address): \n","        self.address = address \n","      \n","    # Retrieves instance variable     \n","    def getAddress(self):     \n","        return self.address    \n","  \n","# Driver Code \n","a = CSStudent(101) \n","a.setAddress(\"Noida, UP\") \n","print(a.getAddress())  "],"execution_count":9,"outputs":[{"output_type":"stream","text":["Noida, UP\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lKA18rRGRwut","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"606c3d6d-5c1e-4644-91fb-d70365e327a6","executionInfo":{"status":"ok","timestamp":1561720591671,"user_tz":-330,"elapsed":786,"user":{"displayName":"parth mistry","photoUrl":"https://lh3.googleusercontent.com/-XnE4WLc2Cq4/AAAAAAAAAAI/AAAAAAAANDE/xiLXoOhcX3c/s64/photo.jpg","userId":"01481429770024434483"}}},"source":[" class MyClass:   \n","        # assign the values to the MyClass attributes \n","        number = 0       \n","        name = \"noname\"\n","  \n","def Main(): \n","        # Creating an object of the MyClass.  \n","        # Here, 'me' is the object \n","        me = MyClass()  \n","  \n","        # Accessing the attributes of MyClass \n","        # using the dot(.) operator    \n","        me.number = 2016    \n","        me.name = \"parth\"\n","  \n","        # str is an build-in function that  \n","        # creates an string \n","        print(me.name + \" \" + str(me.number)) \n","     \n","# telling python that there is main in the program. \n","if __name__=='__main__':   \n","        Main() \n"],"execution_count":11,"outputs":[{"output_type":"stream","text":["parth 2016\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"S1YH-riJzJru","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}